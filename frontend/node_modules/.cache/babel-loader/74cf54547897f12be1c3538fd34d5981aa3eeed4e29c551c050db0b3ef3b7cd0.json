{"ast":null,"code":"export const getCompanyInfo = async () => {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return {\n    name: \"EasyData360 LTDA\",\n    cnpj: \"12.345.678/0001-99\",\n    address: \"Rua das Startups, 123 - São Paulo, SP\",\n    phone: \"(11) 98765-4321\",\n    email: \"contato@easydata360.com\",\n    logoBase64: \"\"\n  };\n};\nexport const saveCompanyInfo = async companyData => {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  console.log(\"Informações salvas:\", companyData);\n  return true;\n};\n\n// ✅ Adicionado para uso no ReceiptPage\nexport const getTransactionById = async id => {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return {\n    id,\n    status: \"SALE\",\n    // ou \"QUOTE\"\n    createdAt: new Date().toISOString(),\n    customerName: \"João da Silva\",\n    customerId: \"123\",\n    total: 150.0,\n    items: [{\n      productId: \"p1\",\n      productName: \"Produto A\",\n      quantity: 2,\n      price: 30.0\n    }, {\n      productId: \"p2\",\n      productName: \"Produto B\",\n      quantity: 3,\n      price: 30.0\n    }]\n  };\n};","map":{"version":3,"names":["getCompanyInfo","Promise","resolve","setTimeout","name","cnpj","address","phone","email","logoBase64","saveCompanyInfo","companyData","console","log","getTransactionById","id","status","createdAt","Date","toISOString","customerName","customerId","total","items","productId","productName","quantity","price"],"sources":["C:/Users/Fernando/Desktop/Easydata360/easyStock360/frontend/src/api/mock.js"],"sourcesContent":["export const getCompanyInfo = async () => {\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n  return {\r\n    name: \"EasyData360 LTDA\",\r\n    cnpj: \"12.345.678/0001-99\",\r\n    address: \"Rua das Startups, 123 - São Paulo, SP\",\r\n    phone: \"(11) 98765-4321\",\r\n    email: \"contato@easydata360.com\",\r\n    logoBase64: \"\"\r\n  };\r\n};\r\n\r\nexport const saveCompanyInfo = async (companyData) => {\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n  console.log(\"Informações salvas:\", companyData);\r\n  return true;\r\n};\r\n\r\n// ✅ Adicionado para uso no ReceiptPage\r\nexport const getTransactionById = async (id) => {\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n  return {\r\n    id,\r\n    status: \"SALE\", // ou \"QUOTE\"\r\n    createdAt: new Date().toISOString(),\r\n    customerName: \"João da Silva\",\r\n    customerId: \"123\",\r\n    total: 150.0,\r\n    items: [\r\n      { productId: \"p1\", productName: \"Produto A\", quantity: 2, price: 30.0 },\r\n      { productId: \"p2\", productName: \"Produto B\", quantity: 3, price: 30.0 }\r\n    ]\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACxD,OAAO;IACLE,IAAI,EAAE,kBAAkB;IACxBC,IAAI,EAAE,oBAAoB;IAC1BC,OAAO,EAAE,uCAAuC;IAChDC,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAE,yBAAyB;IAChCC,UAAU,EAAE;EACd,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EACpD,MAAM,IAAIV,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACxDU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,WAAW,CAAC;EAC/C,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,EAAE,IAAK;EAC9C,MAAM,IAAId,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EACxD,OAAO;IACLa,EAAE;IACFC,MAAM,EAAE,MAAM;IAAE;IAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCC,YAAY,EAAE,eAAe;IAC7BC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,CACL;MAAEC,SAAS,EAAE,IAAI;MAAEC,WAAW,EAAE,WAAW;MAAEC,QAAQ,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,EACvE;MAAEH,SAAS,EAAE,IAAI;MAAEC,WAAW,EAAE,WAAW;MAAEC,QAAQ,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC;EAE3E,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}